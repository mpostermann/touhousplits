<Window x:Class="TouhouSplits.UI.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TouhouSplits.UI"
        xmlns:conv="clr-namespace:TouhouSplits.UI.Converter"
        xmlns:vm="clr-namespace:TouhouSplits.UI.ViewModel"
        mc:Ignorable="d"
        Title="Touhou Splits" SizeToContent="Height" Width="525">
    <Window.DataContext>
        <vm:MainViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <conv:ScoreConverter x:Key="ScoreConverter"/>
        <conv:IsGreaterThanOrEqualConverter x:Key="IsGreaterThanOrEqualConverter"/>
        <BitmapImage UriSource="pack://application:,,,/Resources/Images/warning.png" x:Key="WarningImage"/>
        <BitmapImage UriSource="pack://application:,,,/Resources/Images/delete.png" x:Key="CancelImage"/>
        <Style x:Key="baseStyle">
            <Setter Property="Control.Background" Value="#172123"/>
            <Setter Property="Control.FontSize" Value="16"/>
            <Setter Property="Control.FontFamily" Value="Verdana"/>
            <Setter Property="Control.Foreground" Value="White"/>
        </Style>
        <Style BasedOn="{StaticResource baseStyle}" x:Key="gridStyle">
        </Style>
        <Style BasedOn="{StaticResource baseStyle}" x:Key="labelStyle">
        </Style>
        <Style BasedOn="{StaticResource baseStyle}" x:Key="listViewStyle">
        </Style>
        <Style BasedOn="{StaticResource baseStyle}" TargetType="{x:Type DataGridColumnHeader}" x:Key="tableHeaderStyle">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Offset="0.0" Color="#006592" />
                        <GradientStop Offset="1.0" Color="#28393d" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
        </Style>
        <Style BasedOn="{StaticResource baseStyle}" TargetType="{x:Type DataGridRow}" x:Key="tableRowStyle">
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent" />
            </Style.Resources>
            <Style.Triggers>
                <Trigger Property="AlternationIndex" Value="1">
                    <Setter Property="ItemsControl.Background" Value="#28393d"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style BasedOn="{StaticResource baseStyle}" TargetType="{x:Type DataGridCell}" x:Key="tableCellStyle">
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderBrush" Value="Transparent" />
                </Trigger>
            </Style.Triggers>
            <Setter Property="Background" Value="{Binding MyProperty}" />
        </Style>
        <Style BasedOn="{StaticResource tableCellStyle}" TargetType="{x:Type DataGridCell}" x:Key="tableScoreCellStyle">
            <Style.Triggers>
                <DataTrigger Value="True">
                    <DataTrigger.Binding>
                        <MultiBinding Converter="{StaticResource IsGreaterThanOrEqualConverter}">
                            <Binding Path="RecordingScore" />
                            <Binding Path="PersonalBestScore" />
                        </MultiBinding>
                    </DataTrigger.Binding>
                    <Setter Property="Foreground" Value="#65f156"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style BasedOn="{StaticResource baseStyle}" x:Key="scoreStyle">
            <Setter Property="Control.FontSize" Value="26"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding MainModel.IsNewPersonalBest}" Value="True">
                    <Setter Property="Control.Foreground" Value="#65f156"/>
                </DataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding MainModel.IsNewPersonalBest}" Value="False"/>
                        <Condition Binding="{Binding MainModel.IsPolling}" Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Control.Foreground" Value="#ff5d5d"/>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
        <Style BasedOn="{StaticResource baseStyle}" TargetType="{x:Type Button}" x:Key="warningStyle">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="DemiBold"/>
            <Setter Property="Foreground" Value="Yellow"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="DarkGoldenrod"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style BasedOn="{StaticResource warningStyle}" TargetType="{x:Type Button}" x:Key="saveWarningStyle">
            <Style.Triggers>
                <DataTrigger Binding="{Binding FileModel.HasUnsavedChanges}" Value="False">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding FileModel.HasUnsavedChanges}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Setter Property="IsEnabled" Value="True"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style BasedOn="{StaticResource warningStyle}" TargetType="{x:Type Button}" x:Key="pollingWarningStyle">
            <Style.Triggers>
                <DataTrigger Binding="{Binding MainModel.HasError}" Value="False">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding MainModel.HasError}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Setter Property="IsEnabled" Value="True"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style BasedOn="{StaticResource baseStyle}" TargetType="{x:Type Button}" x:Key="clearWarningStyle">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Height" Value="10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="Height" Value="9"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid Style="{StaticResource gridStyle}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Menu Grid.Row="0">
            <MenuItem Header="_File">
                <MenuItem Header="_Open Splits..." Command="{Binding OpenSplitCommand}"/>
                <MenuItem Header="_New Splits..." Command="{Binding NewSplitCommand}" />
                <MenuItem Header="_Edit Splits..." Command="{Binding EditSplitCommand}" />
                <MenuItem Header="_Exit" Command="{Binding ExitApplicationCommand}"/>
            </MenuItem>
            <MenuItem Header="_Game">
                <MenuItem Header="Start _Recording Split" Command="{Binding StartOrStopRecordingSplitsCommand}"/>
                <MenuItem Header="_Split" Command="{Binding SplitToNextSegmentCommand}"/>
            </MenuItem>
        </Menu>
        <StackPanel Grid.Row="1">
            <Label Style="{StaticResource labelStyle}" Content="{Binding MainModel.GameName, FallbackValue='Open a split!'}"></Label>
            <Label Style="{StaticResource labelStyle}" Content="{Binding MainModel.SplitsName}"></Label>
            <DataGrid RowStyle="{StaticResource tableRowStyle}" ColumnHeaderStyle="{StaticResource tableHeaderStyle}" CellStyle="{StaticResource tableCellStyle}" RowHeaderWidth="0"
                      HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"
                      ItemsSource="{Binding MainModel.RecordingSplits}" AutoGenerateColumns="False" AlternationCount="2"
                      IsReadOnly="True" CanUserAddRows="False" CanUserDeleteRows="False" CanUserResizeRows="False" CanUserSortColumns="False">
                <DataGrid.Columns>
                    <DataGridTextColumn Width="5*" Header="Segment" Binding="{Binding SegmentName}" CanUserReorder="False"/>
                    <DataGridTextColumn Width="3*" Header="Score" Binding="{Binding RecordingScore, Converter={StaticResource ScoreConverter}}" CellStyle="{StaticResource tableScoreCellStyle}" CanUserReorder="False"/>
                    <DataGridTextColumn Width="3*" Header="PB" Binding="{Binding PersonalBestScore}" CanUserReorder="False"/>
                </DataGrid.Columns>
            </DataGrid>
            <Label Style="{StaticResource scoreStyle}" Content="{Binding MainModel.CurrentScore, Converter={StaticResource ScoreConverter}}"></Label>
            <Button Style="{StaticResource saveWarningStyle}" Command="{Binding SaveCurrentSplitsAsCommand}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="20*"/>
                    </Grid.ColumnDefinitions>
                    <Image Grid.Column="0" Source="{StaticResource WarningImage}" Width="20" Height="20" Margin="0,0,5,0" />
                    <TextBlock Grid.Column="1" TextWrapping="Wrap" VerticalAlignment="Center">
                        <TextBlock.Text>
                            <Binding Path="FileModel.FileName" StringFormat="Auto-saving of splits file '{0}' failed. Click here to save to a new location."/>
                        </TextBlock.Text>
                    </TextBlock>
                </Grid>
            </Button>
            <Button Style="{StaticResource pollingWarningStyle}" Command="{Binding SavePollingErrorBugReportCommand}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="20*"/>
                        <ColumnDefinition Width="2*"/>
                    </Grid.ColumnDefinitions>
                    <Image Grid.Column="0" Source="{StaticResource WarningImage}" Width="20" Height="20" Margin="0,0,5,0" />
                    <TextBlock Grid.Column="1" TextWrapping="Wrap" VerticalAlignment="Center">
                        <TextBlock.Text>An error occurred during recording. Click here to save a bug report.</TextBlock.Text>
                    </TextBlock>
                    <Button Grid.Column="2" Style="{StaticResource clearWarningStyle}" Command="{Binding ClearPollingErrorCommand}" Margin="5,0,0,0">
                        <Image Source="{StaticResource CancelImage}"/>
                    </Button>
                </Grid>
            </Button>
        </StackPanel>
    </Grid>
</Window>
